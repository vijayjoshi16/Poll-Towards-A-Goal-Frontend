[{"C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\index.js":"1","C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\reportWebVitals.js":"2","C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\App.js":"3","C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\components\\Navbar\\Navbar.js":"4","C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\components\\Screens\\HomeScreen\\HomeScreen.js":"5","C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\components\\Screens\\SignIn\\SignIn.js":"6","C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\components\\Screens\\SignUp\\SignUp.js":"7","C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\components\\Screens\\OrganizationSignIn\\OrganizationSignIn.js":"8","C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\components\\Screens\\OrganizationSignUp\\OrganizationSignUp.js":"9","C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\components\\Screens\\AllOrganizationPolls\\AllOrganizationPolls.js":"10","C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\PollData.js":"11","C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\components\\Screens\\AllPersonalPolls\\AllPersonalPolls.js":"12","C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\components\\Screens\\OrganizationProfile\\OrganizationProfile.js":"13","C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\components\\Screens\\CreatePersonalPoll\\CreatePersonalPoll.js":"14","C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\components\\Screens\\CreateOrganizationPoll\\CreateOrgnizationPoll.js":"15","C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\components\\Screens\\OrganizationPoll\\OrganizationPoll.js":"16","C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\components\\Screens\\PersonalPoll\\PersonalPoll.js":"17","C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\components\\Footer\\Footer.js":"18","C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\components\\LoaderAnimation.jsx":"19"},{"size":500,"mtime":499162500000,"results":"20","hashOfConfig":"21"},{"size":362,"mtime":499162500000,"results":"22","hashOfConfig":"21"},{"size":2295,"mtime":1612962685040,"results":"23","hashOfConfig":"21"},{"size":14561,"mtime":1613113717730,"results":"24","hashOfConfig":"21"},{"size":8118,"mtime":1613055130533,"results":"25","hashOfConfig":"21"},{"size":4639,"mtime":1638900276584,"results":"26","hashOfConfig":"21"},{"size":7220,"mtime":1638900394090,"results":"27","hashOfConfig":"21"},{"size":4708,"mtime":1638900237683,"results":"28","hashOfConfig":"21"},{"size":7297,"mtime":1638900804366,"results":"29","hashOfConfig":"21"},{"size":2391,"mtime":1613110318793,"results":"30","hashOfConfig":"21"},{"size":9649,"mtime":1612504451840,"results":"31","hashOfConfig":"21"},{"size":2358,"mtime":1613110330583,"results":"32","hashOfConfig":"21"},{"size":4439,"mtime":1613110464617,"results":"33","hashOfConfig":"21"},{"size":5681,"mtime":1613110372747,"results":"34","hashOfConfig":"21"},{"size":5733,"mtime":1613110355342,"results":"35","hashOfConfig":"21"},{"size":10267,"mtime":1613114050442,"results":"36","hashOfConfig":"21"},{"size":8749,"mtime":1613114079799,"results":"37","hashOfConfig":"21"},{"size":1315,"mtime":1612964433681,"results":"38","hashOfConfig":"21"},{"size":335,"mtime":1638895255641,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"10hoyj8",{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"42"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"42"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"42"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"42"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"42"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"42"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"42"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"42"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"42"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"42"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\index.js",[],["90","91"],"C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\reportWebVitals.js",[],"C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\App.js",["92"],"import './App.css';\nimport {BrowserRouter, Link, Route, Switch} from 'react-router-dom';\nimport Navbar from './components/Navbar/Navbar';\nimport HomeScreen from './components/Screens/HomeScreen/HomeScreen';\nimport SignIn from './components/Screens/SignIn/SignIn';\nimport SignUp from './components/Screens/SignUp/SignUp';\nimport OrganizationSignIn from './components/Screens/OrganizationSignIn/OrganizationSignIn';\nimport OrganizationSignUp from './components/Screens/OrganizationSignUp/OrganizationSignUp';\nimport CreatePersonalPoll from './components/Screens/CreatePersonalPoll/CreatePersonalPoll';\nimport CreateOrganizationPoll from './components/Screens/CreateOrganizationPoll/CreateOrgnizationPoll';\nimport AllOrganizationPolls from './components/Screens/AllOrganizationPolls/AllOrganizationPolls';\nimport AllPersonalPolls from './components/Screens/AllPersonalPolls/AllPersonalPolls';\nimport OrganizationProfile from './components/Screens/OrganizationProfile/OrganizationProfile';\nimport OrganizationPoll from './components/Screens/OrganizationPoll/OrganizationPoll';\nimport PersonalPoll from './components/Screens/PersonalPoll/PersonalPoll';\nimport Footer from './components/Footer/Footer';\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <header>\n        <Navbar />\n      </header>\n      <div className=\"screens\">\n      <Switch>\n        <Route exact path=\"/\" component={HomeScreen} />\n        <Route path=\"/signin\" component={SignIn} />\n        <Route path=\"/signup\" component={SignUp} />\n        <Route path=\"/organizationsignin\" component={OrganizationSignIn} />\n        <Route path=\"/organizationsignup\" component={OrganizationSignUp} />\n        <Route path=\"/createpersonalpoll\" component={CreatePersonalPoll} />\n        <Route path=\"/createorganizationpoll\" component={CreateOrganizationPoll} />\n        <Route path=\"/allorganizationpolls\" component={AllOrganizationPolls} />\n        <Route path=\"/allpersonalpolls\" component={AllPersonalPolls} />\n        <Route path=\"/organizationprofile/:id\" component={OrganizationProfile} />\n        <Route path=\"/organizationpoll/:id\" component={OrganizationPoll} />\n        <Route path=\"/personalpoll/:id\" component={PersonalPoll} />\n      </Switch>\n      </div>\n      <Footer></Footer>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\components\\Navbar\\Navbar.js",["93","94","95"],"import React,{useState,useEffect} from 'react';\r\nimport {useMediaQuery } from 'react-responsive';\r\nimport PollOutlinedIcon from '@material-ui/icons/PollOutlined';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SwipeableDrawer from '@material-ui/core/SwipeableDrawer';\r\nimport {useHistory} from 'react-router-dom';\r\nconst jwt = require('jsonwebtoken');\r\n\r\nexport default function Navbar(){\r\n  const isMobile = useMediaQuery({\r\n    maxWidth:\"960px\"\r\n  });\r\n  const history = useHistory();\r\n  const [open, setOpen] = useState(false);\r\n  const [user, setUser] = useState(false);\r\n  const [org, setOrg] = useState(false);\r\n\r\n  useEffect(()=>{\r\n    try{\r\n      const decodedToken = jwt.verify(localStorage.getItem(\"user\"),process.env.REACT_APP_JWT_SECRET);\r\n      setUser(true);\r\n    }catch{\r\n      setUser(false);\r\n      try{\r\n        const decodedToken = jwt.verify(localStorage.getItem(\"organization\"),process.env.REACT_APP_JWT_SECRET);\r\n        setOrg(true);\r\n      }catch{\r\n        setOrg(false);\r\n      }\r\n    }\r\n  },[localStorage.getItem(\"user\")]);\r\n\r\n  return(\r\n    <div>\r\n      {\r\n        !isMobile\r\n        ?\r\n        <div\r\n        style={{\r\n          backgroundColor:\"white\",\r\n          paddingTop:\"5px\",\r\n          boxShadow:\"5px 5px 15px #afacac\",\r\n          position:\"fixed\",\r\n          width:\"100%\",\r\n          top:\"0\"\r\n        }}>\r\n        <PollOutlinedIcon \r\n          color=\"primary\"\r\n          fontSize=\"large\"\r\n          style={{\r\n            width:\"40px\",\r\n            height:\"40px\",\r\n            marginTop:\"5px\",\r\n            marginLeft:\"50px\",\r\n            cursor:\"pointer\"\r\n          }}\r\n          onClick={()=>{history.push(\"/\")}}></PollOutlinedIcon>\r\n          <h1 \r\n          style={{\r\n            display:\"inline\",\r\n            fontSize:\"2rem\",\r\n            marginLeft:\"20px\",\r\n            color:\"#3f51b5\",\r\n            verticalAlign:\"top\",\r\n            cursor:\"pointer\"}}\r\n            onClick={()=>{history.push(\"/\")}}>\r\n            POLLING APP\r\n            </h1>\r\n          {\r\n            user\r\n            ?\r\n            <div\r\n              style={{display:\"inline\",float:\"right\",marginTop:\"5px\",marginRight:\"5px\"}}>\r\n                <h2\r\n                style={{\r\n              display:\"inline\",\r\n              fontSize:\"1.5rem\",\r\n              marginLeft:\"10px\",\r\n              color:\"#3f51b5\",\r\n              verticalAlign:\"top\",\r\n              fontWeight:200,\r\n              cursor:\"pointer\"}}\r\n              onClick={()=>{history.push('/allpersonalpolls')}}\r\n              >Personal Polls</h2>\r\n                <h2\r\n                style={{\r\n              display:\"inline\",\r\n              fontSize:\"1.5rem\",\r\n              marginLeft:\"10px\",\r\n              color:\"#3f51b5\",\r\n              verticalAlign:\"top\",\r\n              fontWeight:200,\r\n              cursor:\"pointer\"}}\r\n              onClick={()=>{history.push('/allorganizationpolls')}}\r\n              >Organization Polls</h2>\r\n              <h2\r\n                style={{\r\n              display:\"inline\",\r\n              fontSize:\"1.5rem\",\r\n              marginLeft:\"10px\",\r\n              color:\"#3f51b5\",\r\n              verticalAlign:\"top\",\r\n              fontWeight:200,\r\n              cursor:\"pointer\"}}\r\n              onClick={()=>{history.push('/createpersonalpoll')}}\r\n              >Create Poll</h2>\r\n                <h2\r\n                style={{\r\n              display:\"inline\",\r\n              fontSize:\"1.5rem\",\r\n              marginLeft:\"10px\",\r\n              color:\"white\",\r\n              verticalAlign:\"top\",\r\n              fontWeight:200,\r\n              backgroundColor:\"#5e6cb8\",\r\n              padding:\"5px\",\r\n              borderRadius:\"5px\",\r\n              cursor:\"pointer\"}}\r\n              onClick={()=>{\r\n                localStorage.removeItem(\"user\");\r\n                history.push('/');\r\n                window.location.reload();\r\n              }}\r\n              >Logout</h2>\r\n              </div>\r\n            :\r\n            org\r\n            ?\r\n            <div\r\n              style={{display:\"inline\",float:\"right\",marginTop:\"5px\",marginRight:\"5px\"}}>\r\n                <h2\r\n                style={{\r\n              display:\"inline\",\r\n              fontSize:\"1.5rem\",\r\n              marginLeft:\"10px\",\r\n              color:\"#3f51b5\",\r\n              verticalAlign:\"top\",\r\n              fontWeight:200,\r\n              cursor:\"pointer\"}}\r\n              onClick={()=>{\r\n                history.push(`/organizationprofile/${jwt.verify(localStorage.getItem(\"organization\"),process.env.REACT_APP_JWT_SECRET)._id}`)\r\n              }}\r\n              >Profile</h2>\r\n              <h2\r\n                style={{\r\n              display:\"inline\",\r\n              fontSize:\"1.5rem\",\r\n              marginLeft:\"10px\",\r\n              color:\"#3f51b5\",\r\n              verticalAlign:\"top\",\r\n              fontWeight:200,\r\n              cursor:\"pointer\"}}\r\n              onClick={()=>{history.push('/createorganizationpoll')}}\r\n              >Create Poll</h2>\r\n                <h2\r\n                style={{\r\n              display:\"inline\",\r\n              fontSize:\"1.5rem\",\r\n              marginLeft:\"10px\",\r\n              color:\"white\",\r\n              verticalAlign:\"top\",\r\n              fontWeight:200,\r\n              backgroundColor:\"#5e6cb8\",\r\n              padding:\"5px\",\r\n              borderRadius:\"5px\",\r\n              cursor:\"pointer\"}}\r\n              onClick={()=>{\r\n                localStorage.removeItem(\"organization\");\r\n                history.push('/');\r\n                window.location.reload();\r\n              }}\r\n              >Logout</h2>\r\n              </div>\r\n            :\r\n            <div\r\n              style={{display:\"inline\",float:\"right\",marginTop:\"5px\",marginRight:\"5px\"}}>\r\n                <h2\r\n                style={{\r\n              display:\"inline\",\r\n              fontSize:\"1.5rem\",\r\n              marginLeft:\"10px\",\r\n              color:\"#3f51b5\",\r\n              verticalAlign:\"top\",\r\n              fontWeight:200,\r\n              cursor:\"pointer\"}}\r\n              onClick={()=>{history.push(\"/signin\")}}\r\n              >SignIn</h2>\r\n                <h2\r\n                style={{\r\n              display:\"inline\",\r\n              fontSize:\"1.5rem\",\r\n              marginLeft:\"10px\",\r\n              color:\"#3f51b5\",\r\n              verticalAlign:\"top\",\r\n              fontWeight:200,\r\n              cursor:\"pointer\"}}\r\n              onClick={()=>{history.push(\"/signup\")}}\r\n              >Register</h2>\r\n              <h2\r\n              style={{\r\n              display:\"inline\",\r\n              fontSize:\"1.5rem\",\r\n              marginLeft:\"10px\",\r\n              color:\"white\",\r\n              verticalAlign:\"top\",\r\n              fontWeight:200,\r\n              backgroundColor:\"#5e6cb8\",\r\n              padding:\"5px\",\r\n              borderRadius:\"5px\",\r\n              cursor:\"pointer\"}}\r\n              onClick={()=>{history.push(\"/organizationsignin\")}}\r\n              >Org SignIn</h2>\r\n              <h2\r\n              style={{\r\n              display:\"inline\",\r\n              fontSize:\"1.5rem\",\r\n              marginLeft:\"10px\",\r\n              color:\"white\",\r\n              verticalAlign:\"top\",\r\n              fontWeight:200,\r\n              backgroundColor:\"#5e6cb8\",\r\n              padding:\"5px\",\r\n              borderRadius:\"5px\",\r\n              cursor:\"pointer\"}}\r\n              onClick={()=>{history.push(\"/organizationsignup\")}}\r\n              >Org Register</h2>\r\n              </div>\r\n          }\r\n          </div>\r\n        :\r\n        <div\r\n        style={{\r\n          backgroundColor:\"white\",\r\n          paddingTop:\"5px\",\r\n          boxShadow:\"5px 5px 15px #afacac\",\r\n          position:\"fixed\",\r\n          width:\"100%\",\r\n          top:\"0\"\r\n        }}>\r\n        <PollOutlinedIcon \r\n          color=\"primary\"\r\n          fontSize=\"large\"\r\n          style={{\r\n            width:\"40px\",\r\n            height:\"40px\",\r\n            marginTop:\"5px\",\r\n            marginLeft:\"30px\",\r\n            cursor:\"pointer\"\r\n          }}\r\n          onClick={()=>{history.push(\"/\")}}></PollOutlinedIcon>\r\n          <h1 \r\n          style={{\r\n            display:\"inline\",\r\n            fontSize:\"2rem\",\r\n            marginLeft:\"20px\",\r\n            color:\"#3f51b5\",\r\n            verticalAlign:\"top\",\r\n            cursor:\"pointer\"}}\r\n            onClick={()=>{history.push(\"/\")}}>\r\n            POLLING APP\r\n            </h1>\r\n            <div\r\n            style={{\r\n              position:\"fixed\",\r\n              bottom:\"25px\",\r\n              left:\"15px\",\r\n              backgroundColor:\"#3f51b5\",\r\n              borderRadius:\"50%\",\r\n              height:\"50px\",\r\n              width:\"50px\",\r\n              color:\"white\"\r\n            }}\r\n            onClick={()=>{setOpen(true)}}>\r\n              <MenuIcon\r\n              style={{\r\n                width:\"30px\",\r\n                height:\"30px\",\r\n                marginLeft:\"10px\",\r\n                marginTop:\"10px\"\r\n              }}></MenuIcon>\r\n            </div>\r\n            <SwipeableDrawer\r\n            open={open}\r\n            onOpen={()=>{setOpen(true)}}\r\n            onClose={()=>{setOpen(false)}}>\r\n            {\r\n            user\r\n            ?\r\n            <div\r\n              style={{display:\"inline\",float:\"right\",marginTop:\"5px\",marginRight:\"60px\"}}>\r\n                <h2\r\n                style={{\r\n              fontSize:\"1.5rem\",\r\n              marginLeft:\"20px\",\r\n              color:\"#3f51b5\",\r\n              verticalAlign:\"top\",\r\n              fontWeight:200,\r\n              cursor:\"pointer\"}}\r\n              onClick={()=>{history.push('/allpersonalpolls');\r\n              setOpen(false)}}\r\n              >Personal Polls</h2>\r\n                <h2\r\n                style={{\r\n              fontSize:\"1.5rem\",\r\n              marginLeft:\"20px\",\r\n              color:\"#3f51b5\",\r\n              verticalAlign:\"top\",\r\n              fontWeight:200,\r\n              cursor:\"pointer\"}}\r\n              onClick={()=>{history.push('/allorganizationpolls');\r\n              setOpen(false)}}\r\n              >Organization Polls</h2>\r\n              <h2\r\n                style={{\r\n              fontSize:\"1.5rem\",\r\n              marginLeft:\"20px\",\r\n              color:\"#3f51b5\",\r\n              verticalAlign:\"top\",\r\n              fontWeight:200,\r\n              cursor:\"pointer\"}}\r\n              onClick={()=>{history.push('/createpersonalpoll');\r\n              setOpen(false)}}\r\n              >Create Poll</h2>\r\n                <h2\r\n                style={{\r\n              fontSize:\"1.5rem\",\r\n              marginLeft:\"20px\",\r\n              color:\"white\",\r\n              verticalAlign:\"top\",\r\n              fontWeight:200,\r\n              backgroundColor:\"#5e6cb8\",\r\n              padding:\"5px\",\r\n              borderRadius:\"5px\",\r\n              cursor:\"pointer\"}}\r\n              onClick={()=>{\r\n                localStorage.removeItem(\"user\");\r\n                history.push('/');\r\n                setOpen(false);\r\n                window.location.reload();\r\n              }}\r\n              >Logout</h2>\r\n              </div>\r\n            :\r\n            org\r\n            ?\r\n            <div\r\n              style={{display:\"inline\",float:\"right\",marginTop:\"5px\",marginRight:\"60px\"}}>\r\n                <h2\r\n                style={{\r\n              fontSize:\"1.5rem\",\r\n              marginLeft:\"20px\",\r\n              color:\"#3f51b5\",\r\n              verticalAlign:\"top\",\r\n              fontWeight:200,\r\n              cursor:\"pointer\"}}\r\n              onClick={()=>{\r\n                history.push(`/organizationprofile/${jwt.verify(localStorage.getItem(\"organization\"),process.env.REACT_APP_JWT_SECRET)._id}`);\r\n                setOpen(false)\r\n              }}\r\n              >Profile</h2>\r\n              <h2\r\n                style={{\r\n              fontSize:\"1.5rem\",\r\n              marginLeft:\"20px\",\r\n              color:\"#3f51b5\",\r\n              verticalAlign:\"top\",\r\n              fontWeight:200,\r\n              cursor:\"pointer\"}}\r\n              onClick={()=>{history.push('/createorganizationpoll');\r\n              setOpen(false)}}\r\n              >Create Poll</h2>\r\n                <h2\r\n                style={{\r\n              fontSize:\"1.5rem\",\r\n              marginLeft:\"20px\",\r\n              color:\"white\",\r\n              verticalAlign:\"top\",\r\n              fontWeight:200,\r\n              backgroundColor:\"#5e6cb8\",\r\n              padding:\"5px\",\r\n              borderRadius:\"5px\",\r\n              cursor:\"pointer\"}}\r\n              onClick={()=>{\r\n                localStorage.removeItem(\"organization\");\r\n                history.push('/');\r\n                setOpen(false);\r\n                window.location.reload();\r\n              }}\r\n              >Logout</h2>\r\n              </div>\r\n            :\r\n            <div\r\n              style={{display:\"inline\",float:\"right\",marginTop:\"5px\",marginRight:\"60px\"}}>\r\n                <h2\r\n                style={{\r\n              fontSize:\"1.5rem\",\r\n              marginLeft:\"20px\",\r\n              color:\"#3f51b5\",\r\n              verticalAlign:\"top\",\r\n              fontWeight:200,\r\n              cursor:\"pointer\"}}\r\n              onClick={()=>{history.push(\"/signin\");\r\n              setOpen(false)}}\r\n              >SignIn</h2>\r\n                <h2\r\n                style={{\r\n              fontSize:\"1.5rem\",\r\n              marginLeft:\"20px\",\r\n              color:\"#3f51b5\",\r\n              verticalAlign:\"top\",\r\n              fontWeight:200,\r\n              cursor:\"pointer\"}}\r\n              onClick={()=>{history.push(\"/signup\");\r\n              setOpen(false)}}\r\n              >Register</h2>\r\n              <h2\r\n              style={{\r\n              fontSize:\"1.5rem\",\r\n              marginLeft:\"20px\",\r\n              color:\"white\",\r\n              verticalAlign:\"top\",\r\n              fontWeight:200,\r\n              backgroundColor:\"#5e6cb8\",\r\n              padding:\"5px\",\r\n              borderRadius:\"5px\",\r\n              cursor:\"pointer\"}}\r\n              onClick={()=>{history.push(\"/organizationsignin\");\r\n              setOpen(false)}}\r\n              >Org SignIn</h2>\r\n              <h2\r\n              style={{\r\n              fontSize:\"1.5rem\",\r\n              marginLeft:\"20px\",\r\n              color:\"white\",\r\n              verticalAlign:\"top\",\r\n              fontWeight:200,\r\n              backgroundColor:\"#5e6cb8\",\r\n              padding:\"5px\",\r\n              borderRadius:\"5px\",\r\n              cursor:\"pointer\"}}\r\n              onClick={()=>{history.push(\"/organizationsignup\");\r\n              setOpen(false)}}\r\n              >Org Register</h2>\r\n              </div>\r\n          }\r\n            </SwipeableDrawer>\r\n        </div>\r\n      }\r\n    </div>\r\n  )\r\n}","C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\components\\Screens\\HomeScreen\\HomeScreen.js",["96","97"],"import './HomeScreen.css';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport intro from '../../../img/intro.jpg';\r\nimport final_img from '../../../img/final_img.png';\r\nimport ForumIcon from '@material-ui/icons/Forum';\r\nimport InsertEmoticonIcon from '@material-ui/icons/InsertEmoticon';\r\nimport BusinessIcon from '@material-ui/icons/Business';\r\nimport TrendingUpIcon from '@material-ui/icons/TrendingUp';\r\nimport LanguageIcon from '@material-ui/icons/Language';\r\nimport TimelapseIcon from '@material-ui/icons/Timelapse';\r\nimport LockOpenIcon from '@material-ui/icons/LockOpen';\r\nimport PollIcon from '@material-ui/icons/Poll';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\r\nimport WebIcon from '@material-ui/icons/Web';\r\n\r\nconst HomeScreen = ()=>{\r\n    return(\r\n        <div>\r\n            <Grid container className=\"landing_page\">\r\n                <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                    <h1 className=\"main_heading\">POLL TOWARDS A GOAL</h1>\r\n                    <p className=\"short_description\">A web app where you can conduct your own personal or organization polls and this serves as the ultimate solution for all your needs. This web app the necessary features for both poll creators and voters in order to carry out their polling tasks.</p>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={6} lg={6}>\r\n                    <img className=\"intro_img\" src={intro}></img>\r\n                </Grid>\r\n                <Grid className=\"why_polls\" item xs={12} sm={12} md={12} lg={12}>\r\n                    <h1 className=\"why_polls_heading\">WHY DO WE NEED POLLS??</h1>\r\n                    <Grid container>\r\n                        <Grid item xs={12} sm={12} md={6} lg={4}>\r\n                            <div className=\"why_polls_card\" >\r\n                            <ForumIcon style={{height:\"100px\",width:\"100px\",marginTop:\"5px\"}}></ForumIcon>\r\n                            <p>Polls form a way to communicate with your audience or customers. For eg. a restaurant and its customers, a website and its users, a team of developers and a set of users, a tourist place and its visitors, a company selling a product and its customers</p>\r\n                            </div>\r\n                        </Grid> \r\n                        <Grid item xs={12} sm={12} md={6} lg={4}>\r\n                            <div className=\"why_polls_card\" >\r\n                            <InsertEmoticonIcon style={{height:\"100px\",width:\"100px\",marginTop:\"5px\"}}></InsertEmoticonIcon>\r\n                            <p>With polls you can assess the satisfaction level of your audience, customers, subscribers. This would help you to judje how good has you organization or business has performed based on the positive feedback and constructive criticism.</p>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6} lg={4}>\r\n                            <div className=\"why_polls_card\" >\r\n                            <BusinessIcon style={{height:\"100px\",width:\"100px\",marginTop:\"5px\"}}></BusinessIcon>\r\n                            <p>When you know the needs of your customers, you can accordingly bring changes and innovations to your organization which will bring an improvement in its products and services given the fact that you'll be now clear with what exactly to do.</p>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6} lg={4}>\r\n                            <div className=\"why_polls_card\" >\r\n                            <TrendingUpIcon style={{height:\"100px\",width:\"100px\",marginTop:\"5px\"}}></TrendingUpIcon>\r\n                            <p>Such a feedback system can help organizations and business grow in terms of profit, reputation among customers, and understanding the need of modern day requirements.</p>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6} lg={4}>\r\n                            <div className=\"why_polls_card\" >\r\n                            <LanguageIcon style={{height:\"100px\",width:\"100px\",marginTop:\"5px\"}}></LanguageIcon>\r\n                            <p>Polls on an online platform can connect you to a huge number of people which gives you a large set of audience to take a feedback upon and makes your poll results cover all possibilities.</p>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6} lg={4}>\r\n                            <div className=\"why_polls_card\" >\r\n                            <TimelapseIcon style={{height:\"100px\",width:\"100px\",marginTop:\"5px\"}}></TimelapseIcon>\r\n                            <p>Online poll platform gives you the comfort of instant results since there is no procedure of manual counting. Hence you can get your results within a short span of time</p>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid className=\"features\" item  xs={12} sm={12} md={12} lg={12}>\r\n                    <h1 className=\"features_heading\">FEATURES</h1>\r\n                    <Grid container>\r\n                        <Grid item xs={12} sm={12} md={6} lg={4}>\r\n                            <div className=\"why_polls_card\" >\r\n                            <WebIcon style={{height:\"100px\",width:\"100px\",marginTop:\"5px\"}}></WebIcon>\r\n                            <p>Landing page to give a basic introduction to the web app</p>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6} lg={4}>\r\n                            <div className=\"why_polls_card\" >\r\n                            <LockOpenIcon style={{height:\"100px\",width:\"100px\",marginTop:\"5px\"}}></LockOpenIcon>\r\n                            <p>Sign In and Register for both Users and Organizations</p>\r\n                            </div>\r\n                        </Grid> \r\n                        <Grid item xs={12} sm={12} md={6} lg={4}>\r\n                            <div className=\"why_polls_card\" >\r\n                            <DashboardIcon style={{height:\"100px\",width:\"100px\",marginTop:\"5px\"}}></DashboardIcon>\r\n                            <p>Dashboard/Profile for organizations</p>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6} lg={4}>\r\n                            <div className=\"why_polls_card\" >\r\n                            <PollIcon style={{height:\"100px\",width:\"100px\",marginTop:\"5px\"}}></PollIcon>\r\n                            <p>Create Personal Polls and Organization Polls</p>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6} lg={4}>\r\n                            <div className=\"why_polls_card\" >\r\n                            <FormatListBulletedIcon style={{height:\"100px\",width:\"100px\",marginTop:\"5px\"}}></FormatListBulletedIcon>\r\n                            <p>Page for polls to see the poll details and current results</p>\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} sm={12} md={6} lg={4}>\r\n                            <div className=\"why_polls_card\" >\r\n                            <HowToVoteIcon style={{height:\"100px\",width:\"100px\",marginTop:\"5px\"}}></HowToVoteIcon>\r\n                            <p>Vote to Personal and Organization Polls</p>\r\n                            </div>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <h2 className=\"final_message\">SO WHAT ARE YOU WAITING FOR??? GET STARTED WITH THIS WONDERFUL POLLING APP!!</h2>\r\n                <img className=\"final_img\" src={final_img}></img>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HomeScreen;","C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\components\\Screens\\SignIn\\SignIn.js",["98","99"],"C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\components\\Screens\\SignUp\\SignUp.js",["100","101","102","103","104","105"],"C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\components\\Screens\\OrganizationSignIn\\OrganizationSignIn.js",["106","107","108"],"C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\components\\Screens\\OrganizationSignUp\\OrganizationSignUp.js",["109","110","111","112","113","114","115"],"C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\components\\Screens\\AllOrganizationPolls\\AllOrganizationPolls.js",["116","117","118"],"import {useState, useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport \"./AllOrganizationPolls.css\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst AllOrganizationPolls = ()=>{\r\n    const [PollData, setPollData] = useState([]);\r\n    const history = useHistory();\r\n\r\n    useEffect(()=>{\r\n        try{\r\n            const decodedToken = jwt.verify(localStorage.getItem(\"user\"),process.env.REACT_APP_JWT_SECRET)\r\n            fetch(\"https://poll-towards-a-goal.herokuapp.com/poll/organization/getallpolls\",\r\n            {\r\n                method:\"get\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\",\r\n                },\r\n            })\r\n            .then(res=>res.json())\r\n            .then(result=>{\r\n                setPollData(result.polls)\r\n            })\r\n        }catch{\r\n            history.push(\"/signin\")\r\n        }\r\n    },[]);\r\n\r\n    return(\r\n        <div className=\"all_content_all_org_polls\">\r\n            <h1>ALL ORGANIZATION POLLS</h1>\r\n            <Grid container>\r\n                {PollData.map((data)=>{\r\n                    return(\r\n                        <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                            <div className=\"poll_card\"\r\n                            onClick={()=>{history.push(`/organizationpoll/${data._id}`)}}>\r\n                                <div className=\"poll_card_content\">\r\n                                <div className=\"color_section\"></div>\r\n                                <img className=\"org_image\" src={data.createdBy.pic} />\r\n                                <h2 className=\"org_name_poll\">{data.createdBy.name}</h2>\r\n                                <p className=\"org_poll_question\">{data.question}</p>\r\n                                <HowToVoteIcon\r\n                                className=\"how_to_vote_icon\"></HowToVoteIcon>\r\n                                <span className=\"vote_count\">{data.votes.length? data.votes.length : 0} votes</span>\r\n                                <div className=\"color_section_bottom\"></div>\r\n                                </div>\r\n                            </div>\r\n                        </Grid> \r\n                    )\r\n                })}\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllOrganizationPolls;","C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\PollData.js",[],["119","120"],"C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\components\\Screens\\AllPersonalPolls\\AllPersonalPolls.js",["121","122","123"],"import {useState, useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport \"./AllPersonalPolls.css\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst AllPersonalPolls = ()=>{\r\n    const [PollData, setPollData] = useState([]);\r\n    const history = useHistory();\r\n\r\n    useEffect(()=>{\r\n        try{\r\n            const decodedToken = jwt.verify(localStorage.getItem(\"user\"),process.env.REACT_APP_JWT_SECRET)\r\n            fetch(\"https://poll-towards-a-goal.herokuapp.com/poll/personal/getallpolls\",\r\n            {\r\n                method:\"get\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\",\r\n                },\r\n            })\r\n            .then(res=>res.json())\r\n            .then(result=>{\r\n                setPollData(result.polls)\r\n            })\r\n        }catch{\r\n            history.push(\"/signin\")\r\n        }\r\n    },[]);\r\n\r\n    return(\r\n        <div className=\"all_content_all_personal_polls\">\r\n            <h1>ALL PERSONAL POLLS</h1>\r\n            <Grid container>\r\n                {PollData.map((data)=>{\r\n                    return(\r\n                        <Grid item xs={12} sm={6} md={4} lg={3}>\r\n                            <div className=\"poll_card\"\r\n                            onClick={()=>{history.push(`/personalpoll/${data._id}`)}}>\r\n                                <div className=\"poll_card_content\">\r\n                                <div className=\"color_section\"></div>\r\n                                <img className=\"person_image\" src={data.createdBy.pic} />\r\n                                <h2 className=\"person_name_poll\">{data.createdBy.name}</h2>\r\n                                <p className=\"person_poll_question\">{data.question}</p>\r\n                                <HowToVoteIcon\r\n                                className=\"how_to_vote_icon\"></HowToVoteIcon>\r\n                                <span className=\"vote_count\">{data.votes.length} votes</span>\r\n                                <div className=\"color_section_bottom\"></div>\r\n                                </div>\r\n                            </div>\r\n                        </Grid> \r\n                    )\r\n                })}\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AllPersonalPolls;","C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\components\\Screens\\OrganizationProfile\\OrganizationProfile.js",["124","125","126","127"],"import {useState, useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport \"./OrganizationProfile.css\";\r\nimport Grid from '@material-ui/core/Grid';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\r\nconst jwt = require('jsonwebtoken');\r\n\r\nconst OrganizationProfile = (props)=>{\r\n    const [orgData, setOrgData] = useState({\r\n        name:\"Loading...\",\r\n        pic:\"Loading...\",\r\n        polls:[],\r\n        email:\"Loading...\"\r\n    });\r\n    const history = useHistory();\r\n\r\n    useEffect(()=>{\r\n        try{\r\n            const decodedToken = jwt.verify(localStorage.getItem(\"user\"),process.env.REACT_APP_JWT_SECRET)\r\n            fetch(\r\n                `https://poll-towards-a-goal.herokuapp.com/organization/${props.location.pathname.substring(21)}`,\r\n                {\r\n                    method: \"get\",\r\n                    headers:{\r\n                        \"Content-type\": \"application/json\",\r\n                    },\r\n                }\r\n            )\r\n            .then(res=>res.json())\r\n            .then(result=>{\r\n                if(result.message===\"Success\"){\r\n                    setOrgData(result.organization)\r\n                }\r\n            })\r\n        }catch{\r\n            try{\r\n                const decodedToken = jwt.verify(localStorage.getItem(\"organization\"),process.env.REACT_APP_JWT_SECRET);\r\n                fetch(\r\n                    `https://poll-towards-a-goal.herokuapp.com/organization/${props.location.pathname.substring(21)}`,\r\n                    {\r\n                        method: \"get\",\r\n                        headers:{\r\n                            \"Content-type\": \"application/json\",\r\n                        },\r\n                    }\r\n                )\r\n                .then(res=>res.json())\r\n                .then(result=>{\r\n                    if(result.message===\"Success\"){\r\n                        setOrgData(result.organization)\r\n                    }\r\n                })\r\n            }catch{\r\n                history.push(\"/signin\")\r\n            }\r\n            \r\n        }\r\n    },[]);\r\n    \r\n    return(\r\n        <div className=\"org_profile_all_content\">\r\n            <Grid container>\r\n                <Grid item xs={12} sm={12} md={4} lg={3}>\r\n                    <div className=\"org_details\">\r\n                    <div className=\"color_section\"></div>\r\n                    <img src={orgData.pic} className=\"organization_image\"/>\r\n                    <h2 className=\"org_name_profile\">{orgData.name}</h2>\r\n                    <EmailIcon className=\"email_icon_org_profile\"></EmailIcon>\r\n                    <span className=\"org_email\">{orgData.email}</span>\r\n                    <br></br>\r\n                    <HowToVoteIcon className=\"email_icon_org_profile\"></HowToVoteIcon>\r\n                    <span className=\"org_email\">{orgData.polls.length} polls conducted till now</span>\r\n                    <br></br>\r\n                    <div className=\"color_section_bottom\"></div>\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={8} lg={9}>\r\n                    <div className=\"org_all_polls\">\r\n                        {orgData.polls.map((data)=>{\r\n                            return(\r\n                                <div className=\"org_poll_card\"\r\n                                onClick={()=>{history.push(`/organizationpoll/${data._id}`)}}>\r\n                                    <div className=\"color_section\"></div>\r\n                                    <h2 className=\"option_content\">{data.question}</h2>\r\n                                    {data.options.map((option,index)=>{\r\n                                        return(\r\n                                            <h3 className=\"option_content\">{index+1+\".\"} {option.optionContent}</h3>\r\n                                        )\r\n                                    })}\r\n                                    <HowToVoteIcon className=\"option_content\"></HowToVoteIcon>\r\n                                    <span style={{verticalAlign:\"top\"}}>{data.votes.length} votes till now</span>\r\n                                    <div className=\"color_section_bottom\"></div>\r\n                                </div>\r\n                            )\r\n                        })}\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrganizationProfile","C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\components\\Screens\\CreatePersonalPoll\\CreatePersonalPoll.js",["128"],"import {useState, useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport './CreatePersonalPoll.css';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst jwt = require('jsonwebtoken');\r\n\r\ntoast.configure();\r\n\r\nconst CreatePersonalPoll = ()=>{\r\n    const [question, setQuestion] = useState(\"\");\r\n    const [options, setOptions] = useState([]);\r\n    const [newOption, setNewOption] = useState(\"\");\r\n    const history = useHistory();\r\n    const [id, setId] = useState(\"\");\r\n\r\n    useEffect(()=>{\r\n        try{\r\n            const decodedToken = jwt.verify(localStorage.getItem(\"user\"),process.env.REACT_APP_JWT_SECRET)\r\n            setId(decodedToken._id);\r\n        }catch{\r\n            history.push(\"/signin\")\r\n        }\r\n    },[]);\r\n\r\n    const PostData = ()=>{\r\n        if(!question){\r\n            toast.error('Please enter a question!', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                });\r\n        }else if(options.length === 0){\r\n            toast.error('Please enter atleast one option!', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                });\r\n        }else{\r\n            fetch(\"https://poll-towards-a-goal.herokuapp.com/poll/createpersonalpoll\",\r\n            {\r\n                method: \"post\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    question: question,\r\n                    options: options,\r\n                    createdBy: id,\r\n                }),\r\n            })\r\n            .then(res=>res.json())\r\n            .then(result=>{\r\n                if(result.message === \"Success!\"){\r\n                    toast.success('Created poll successfully!', {\r\n                        position: \"top-right\",\r\n                        autoClose: 2000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                        });\r\n                        history.push(`/personalpoll/${result.poll._id}`);\r\n                }else{\r\n                    toast.error('Some error occured!', {\r\n                        position: \"top-right\",\r\n                        autoClose: 2000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                        });\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"create_poll_card\">\r\n            <h1 className=\"create_poll_heading\">CREATE A PERSONAL POLL</h1>\r\n            <Grid container className=\"poll_container\">\r\n                <Grid item xs={12} sm={6} md={4} lg={4}>\r\n                    <h3 className=\"question_heading\">QUESTION : </h3>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={8} lg={8}>\r\n                    <TextField\r\n                        id=\"outlined-primary\"\r\n                        placeholder=\"Enter a question\"\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        fullWidth={true}\r\n                        onChange={(e)=>{setQuestion(e.target.value)}}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                    <h3 className=\"question_heading\">OPTIONS</h3>\r\n                </Grid>\r\n                {options.map((data,index)=>{\r\n                    index++;\r\n                    return(\r\n                        <Grid style={{marginTop:\"15px\",fontSize:\"1.5rem\"}} item xs={12} sm={12} md={12} lg={12}>\r\n                            {index + \". \" +data.optionContent}\r\n                        </Grid>\r\n                    )\r\n                })}\r\n                <Grid style={{marginTop:\"20px\"}} item xs={12} sm={6} md={8} lg={8}>\r\n                    <TextField\r\n                        id=\"outlined-primary\"\r\n                        placeholder=\"Enter an option\"\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        fullWidth={true}\r\n                        onChange={(e)=>{setNewOption(e.target.value)}}\r\n                        value={newOption}\r\n                    />\r\n                </Grid>\r\n                <Grid style={{marginTop:\"20px\"}} item xs={12} sm={6} md={4} lg={4}>\r\n                    <div className=\"add_option_button\"\r\n                    onClick={()=>{\r\n                        setOptions([...options, {optionContent: newOption, optionIndex: options.length + 1}]);\r\n                        setNewOption(\"\");\r\n                    }}>\r\n                        +\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n            <div className=\"submit_poll_button\"\r\n            onClick = {()=>{PostData()}}>\r\n                    SUBMIT POLL\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreatePersonalPoll;","C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\components\\Screens\\CreateOrganizationPoll\\CreateOrgnizationPoll.js",["129"],"import {useState, useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport './CreateOrganizationPoll.css';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst jwt = require('jsonwebtoken');\r\n\r\ntoast.configure();\r\n\r\nconst CreateOrganizationPoll = ()=>{\r\n    const [question, setQuestion] = useState(\"\");\r\n    const [options, setOptions] = useState([]);\r\n    const [newOption, setNewOption] = useState(\"\");\r\n    const history = useHistory();\r\n    const [id, setId] = useState(\"\");\r\n\r\n    useEffect(()=>{\r\n        try{\r\n            const decodedToken = jwt.verify(localStorage.getItem(\"organization\"),process.env.REACT_APP_JWT_SECRET)\r\n            setId(decodedToken._id);\r\n        }catch{\r\n            history.push(\"/organizationsignin\")\r\n        }\r\n    },[]);\r\n\r\n    const PostData = ()=>{\r\n        if(!question){\r\n            toast.error('Please enter a question!', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                });\r\n        }else if(options.length === 0){\r\n            toast.error('Please enter atleast one option!', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                });\r\n        }else{\r\n            fetch(\"https://poll-towards-a-goal.herokuapp.com/poll/createorganizationpoll\",\r\n            {\r\n                method: \"post\",\r\n                headers:{\r\n                    \"Content-Type\":\"application/json\",\r\n                },\r\n                body: JSON.stringify({\r\n                    question: question,\r\n                    options: options,\r\n                    createdBy: id,\r\n                }),\r\n            })\r\n            .then(res=>res.json())\r\n            .then(result=>{\r\n                if(result.message === \"Success!\"){\r\n                    toast.success('Created poll successfully!', {\r\n                        position: \"top-right\",\r\n                        autoClose: 2000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                        });\r\n                        history.push(`/organizationprofile/${result.poll.createdBy}`);\r\n                }else{\r\n                    toast.error('Some error occured!', {\r\n                        position: \"top-right\",\r\n                        autoClose: 2000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                        });\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"create_poll_card\">\r\n            <h1 className=\"create_poll_heading\">CREATE AN ORGANIZATION POLL</h1>\r\n            <Grid container className=\"poll_container\">\r\n                <Grid item xs={12} sm={6} md={4} lg={4}>\r\n                    <h3 className=\"question_heading\">QUESTION : </h3>\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={8} lg={8}>\r\n                    <TextField\r\n                        id=\"outlined-primary\"\r\n                        placeholder=\"Enter a question\"\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        fullWidth={true}\r\n                        onChange={(e)=>{setQuestion(e.target.value)}}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} sm={12} md={12} lg={12}>\r\n                    <h3 className=\"question_heading\">OPTIONS</h3>\r\n                </Grid>\r\n                {options.map((data,index)=>{\r\n                    index++;\r\n                    return(\r\n                        <Grid style={{marginTop:\"15px\",fontSize:\"1.5rem\"}} item xs={12} sm={12} md={12} lg={12}>\r\n                            {index + \". \" +data.optionContent}\r\n                        </Grid>\r\n                    )\r\n                })}\r\n                <Grid style={{marginTop:\"20px\"}} item xs={12} sm={6} md={8} lg={8}>\r\n                    <TextField\r\n                        id=\"outlined-primary\"\r\n                        placeholder=\"Enter an option\"\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        fullWidth={true}\r\n                        onChange={(e)=>{setNewOption(e.target.value)}}\r\n                        value={newOption}\r\n                    />\r\n                </Grid>\r\n                <Grid style={{marginTop:\"20px\"}} item xs={12} sm={6} md={4} lg={4}>\r\n                    <div className=\"add_option_button\"\r\n                    onClick={()=>{\r\n                        setOptions([...options, {optionContent: newOption, optionIndex: options.length + 1}]);\r\n                        setNewOption(\"\");\r\n                    }}>\r\n                        +\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n            <div className=\"submit_poll_button\"\r\n            onClick={()=>{PostData()}}>\r\n                    SUBMIT POLL\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CreateOrganizationPoll;","C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\components\\Screens\\OrganizationPoll\\OrganizationPoll.js",["130","131","132"],"import {useState, useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport './OrganizationPoll.css';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst jwt = require('jsonwebtoken');\r\n\r\ntoast.configure();\r\n\r\nconst OrganizationPoll = (props)=>{\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [pollData, setPollData] = useState({\r\n        question: \"Loading...\",\r\n        options: [\r\n            {\r\n                optionContent:\"Loading...\",\r\n                optionIndex:\"1\"\r\n            },\r\n            {\r\n                optionContent:\"Loading...\",\r\n                optionIndex:\"2\"\r\n            },\r\n            {\r\n                optionContent:\"Loading...\",\r\n                optionIndex:\"2\"\r\n            }\r\n        ],\r\n        createdBy:{\r\n            name:\"Loading...\"\r\n        },\r\n        votes:[1,2,2,2,2,3,3,3,3]\r\n    });\r\n    const [vote, setVote] = useState(undefined);\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n    const [optionCount, setOptionCount] = useState([1,4,4]);\r\n    const history = useHistory();\r\n\r\n    useEffect(()=>{\r\n        try{\r\n            const decodedToken = jwt.verify(localStorage.getItem(\"user\"),process.env.REACT_APP_JWT_SECRET);\r\n            setUserId(decodedToken._id);\r\n            fetch(\r\n                `https://poll-towards-a-goal.herokuapp.com/poll/organization/${props.location.pathname.substring(18)}`,\r\n                {\r\n                    method: \"get\",\r\n                    headers:{\r\n                        \"Content-type\": \"application/json\",\r\n                    },\r\n                }\r\n            )\r\n            .then(res=>res.json())\r\n            .then(result=>{\r\n                if(result.message===\"Success\"){\r\n                    setPollData(result.poll);\r\n                    var op = new Array(result.poll.options.length).fill(0);\r\n                    try{\r\n                    if(result.poll.votes!==[]){\r\n                        result.poll.votes.forEach((data)=>{\r\n                            op[data.option-1]++;\r\n                        });\r\n                    }\r\n                    }catch{\r\n\r\n                    }\r\n                    setOptionCount(op);\r\n\r\n                }\r\n            })\r\n        }catch{\r\n            try{\r\n                const decodedToken = jwt.verify(localStorage.getItem(\"organization\"),process.env.REACT_APP_JWT_SECRET);\r\n                fetch(\r\n                    `https://poll-towards-a-goal.herokuapp.com/poll/organization/${props.location.pathname.substring(18)}`,\r\n                    {\r\n                        method: \"get\",\r\n                        headers:{\r\n                            \"Content-type\": \"application/json\",\r\n                        },\r\n                    }\r\n                )\r\n                .then(res=>res.json())\r\n                .then(result=>{\r\n                    if(result.message===\"Success\"){\r\n                        setPollData(result.poll);\r\n                        var op = new Array(result.poll.options.length).fill(0);\r\n                        try{\r\n                        if(result.poll.votes!==[]){\r\n                            result.poll.votes.forEach((data)=>{\r\n                                op[data.option-1]++;\r\n                            });\r\n                        }\r\n                        }catch{\r\n    \r\n                        }\r\n                        setOptionCount(op);\r\n    \r\n                    }\r\n                })\r\n            }catch{\r\n                history.push(\"/signin\");\r\n            }\r\n        }\r\n    },[]);\r\n\r\n    const voteButtonHandler = ()=>{\r\n        if(pollData.votes.find((data)=>{return data.votedBy===userId})){\r\n            toast.error('Already voted to this poll!', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                });\r\n        }else{\r\n            setDialogOpen(true);\r\n        }\r\n    }\r\n\r\n    const PostData = ()=>{\r\n        if(vote === undefined){\r\n            toast.error('Please select an option!', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                });\r\n        }else{\r\n            const index = pollData.options.findIndex((data)=>{return data.optionContent===vote})+1;\r\n            fetch(\r\n                `https://poll-towards-a-goal.herokuapp.com/poll/organization/vote/${props.location.pathname.substring(18)}`,\r\n                {\r\n                    method: \"post\",\r\n                    headers:{\r\n                        \"Content-type\": \"application/json\",\r\n                    },\r\n                    body:JSON.stringify({\r\n                        userId: userId,\r\n                        option: index\r\n                    }),\r\n                }\r\n            )\r\n            .then(res=>res.json())\r\n            .then(result=>{\r\n                if(result.poll){\r\n                    toast.success('Successfully voted to this poll', {\r\n                        position: \"top-right\",\r\n                        autoClose: 2000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                        });\r\n                        history.push('/');\r\n                }else{\r\n                    toast.error('Some error occured!', {\r\n                        position: \"top-right\",\r\n                        autoClose: 2000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                        });\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"poll_all_content\">\r\n                <h1 className=\"question\">QUESTION</h1>\r\n                <h2>{pollData.question}</h2>\r\n                <h1>OPTIONS</h1>\r\n                {pollData.options.map((data,index)=>{\r\n                    return(\r\n                        <p>{index+1} . {data.optionContent}</p>\r\n                    )\r\n                })}\r\n                <HowToVoteIcon></HowToVoteIcon>\r\n                <span className=\"vote_count\">{pollData.votes.length} votes till now</span>\r\n                <p className=\"vote_count\"\r\n                style={{cursor:\"pointer\"}}\r\n                onClick={()=>{history.push(`/organizationprofile/${pollData.createdBy._id}`)}}>Conducted By : {pollData.createdBy.name}</p>\r\n                <h1>RESULTS</h1>\r\n                \r\n                    {pollData.options.map((data,index)=>{\r\n                        return(\r\n                            <Grid container>\r\n                                <Grid item xs={12} sm={12} md={9} lg={9}>\r\n                                    <div className=\"bar\" style={{width:pollData.votes.length?optionCount[index]/pollData.votes.length*100+\"%\":\"0.5%\"}}>\r\n                                    \r\n                                    </div>\r\n                                </Grid> \r\n                                <Grid item xs={12} sm={12} md={3} lg={3}>\r\n                                {\r\n                                    pollData.votes.length\r\n                                    ?\r\n                                    <p>{optionCount[index]} votes ({(optionCount[index]/pollData.votes.length*100).toFixed(2)+\"%\"}) {data.optionContent}</p>\r\n                                    :\r\n                                    <p>0 votes (0%) {data.optionContent}</p>\r\n                                }\r\n                                \r\n                                </Grid>  \r\n                            </Grid>\r\n                        );\r\n                    })} \r\n                {userId!==\"\"\r\n                ?\r\n                <div className=\"vote\"\r\n                onClick={()=>{voteButtonHandler()}}>\r\n                    <SendIcon></SendIcon>\r\n                    <span className=\"vote_count\">VOTE</span>\r\n                </div>\r\n                :\r\n                <div></div>\r\n                }\r\n                \r\n                \r\n                <Dialog\r\n                open={dialogOpen}\r\n                onBackdropClick={()=>{setDialogOpen(false)}}>\r\n                    <div className=\"dialog\">\r\n                        <FormControl style={{width:\"100%\"}} component=\"fieldset\">\r\n                        <h2 className=\"options_dialog\">OPTIONS</h2>\r\n                        <RadioGroup aria-label=\"Options\" name=\"options\" value={vote} onChange={(e)=>{setVote(e.target.value)}}>\r\n                            {pollData.options.map((data)=>{\r\n                                return(\r\n                                    <FormControlLabel value={data.optionContent} control={<Radio color=\"primary\" />} label={data.optionContent} />\r\n                                );\r\n                            })}\r\n                            <div className=\"vote\"\r\n                            onClick={()=>{PostData()}}>\r\n                                <SendIcon></SendIcon>\r\n                                <span className=\"vote_count\">VOTE</span>\r\n                            </div>\r\n                        </RadioGroup>\r\n                        </FormControl>\r\n                    </div>\r\n                </Dialog>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default OrganizationPoll;","C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\components\\Screens\\PersonalPoll\\PersonalPoll.js",["133","134"],"import {useState, useEffect} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport './PersonalPoll.css';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport HowToVoteIcon from '@material-ui/icons/HowToVote';\r\nimport SendIcon from '@material-ui/icons/Send';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nconst jwt = require('jsonwebtoken');\r\n\r\ntoast.configure();\r\n\r\nconst PersonalPoll = (props)=>{\r\n    const [userId, setUserId] = useState(\"\");\r\n    const [pollData, setPollData] = useState({\r\n        question: \"Loading...\",\r\n        options: [\r\n            {\r\n                optionContent:\"Loading...\",\r\n                optionIndex:\"1\"\r\n            },\r\n            {\r\n                optionContent:\"Loading...\",\r\n                optionIndex:\"2\"\r\n            },\r\n            {\r\n                optionContent:\"Loading...\",\r\n                optionIndex:\"2\"\r\n            }\r\n        ],\r\n        createdBy:{\r\n            name:\"Loading...\"\r\n        },\r\n        votes:[1,2,2,2,2,3,3,3,3]\r\n    });\r\n    const [vote, setVote] = useState(undefined);\r\n    const [dialogOpen, setDialogOpen] = useState(false);\r\n    const [optionCount, setOptionCount] = useState([1,4,4]);\r\n    const history = useHistory();\r\n\r\n    useEffect(()=>{\r\n        try{\r\n            const decodedToken = jwt.verify(localStorage.getItem(\"user\"),process.env.REACT_APP_JWT_SECRET);\r\n            setUserId(decodedToken._id);\r\n            fetch(\r\n                `https://poll-towards-a-goal.herokuapp.com/poll/personal/${props.location.pathname.substring(14)}`,\r\n                {\r\n                    method: \"get\",\r\n                    headers:{\r\n                        \"Content-type\": \"application/json\",\r\n                    },\r\n                }\r\n            )\r\n            .then(res=>res.json())\r\n            .then(result=>{\r\n                if(result.message===\"Success\"){\r\n                    setPollData(result.poll);\r\n                    var op = new Array(result.poll.options.length).fill(0);\r\n                    try{\r\n                    if(result.poll.votes!==[]){\r\n                        result.poll.votes.forEach((data)=>{\r\n                            op[data.option-1]++;\r\n                        });\r\n                    }\r\n                    }catch{\r\n\r\n                    }\r\n                    setOptionCount(op);\r\n\r\n                }\r\n            })\r\n        }catch{\r\n            history.push(\"/signin\")\r\n        }\r\n    },[]);\r\n\r\n    const voteButtonHandler = ()=>{\r\n        if(pollData.votes.find((data)=>{return data.votedBy===userId})){\r\n            toast.error('Already voted to this poll!', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                });\r\n        }else{\r\n            setDialogOpen(true);\r\n        }\r\n    }\r\n\r\n    const PostData = ()=>{\r\n        if(vote === undefined){\r\n            toast.error('Please select an option!', {\r\n                position: \"top-right\",\r\n                autoClose: 2000,\r\n                hideProgressBar: false,\r\n                closeOnClick: true,\r\n                pauseOnHover: true,\r\n                draggable: true,\r\n                progress: undefined,\r\n                });\r\n        }else{\r\n            const index = pollData.options.findIndex((data)=>{return data.optionContent===vote})+1;\r\n            fetch(\r\n                `https://poll-towards-a-goal.herokuapp.com/poll/personal/vote/${props.location.pathname.substring(14)}`,\r\n                {\r\n                    method: \"post\",\r\n                    headers:{\r\n                        \"Content-type\": \"application/json\",\r\n                    },\r\n                    body:JSON.stringify({\r\n                        userId: userId,\r\n                        option: index\r\n                    }),\r\n                }\r\n            )\r\n            .then(res=>res.json())\r\n            .then(result=>{\r\n                if(result.poll){\r\n                    toast.success('Successfully voted to this poll', {\r\n                        position: \"top-right\",\r\n                        autoClose: 2000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                        });\r\n                        history.push('/');\r\n                }else{\r\n                    toast.error('Some error occured!', {\r\n                        position: \"top-right\",\r\n                        autoClose: 2000,\r\n                        hideProgressBar: false,\r\n                        closeOnClick: true,\r\n                        pauseOnHover: true,\r\n                        draggable: true,\r\n                        progress: undefined,\r\n                        });\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"poll_all_content\">\r\n                <h1 className=\"question\">QUESTION</h1>\r\n                <h2>{pollData.question}</h2>\r\n                <h1>OPTIONS</h1>\r\n                {pollData.options.map((data,index)=>{\r\n                    return(\r\n                        <p>{index+1} . {data.optionContent}</p>\r\n                    )\r\n                })}\r\n                <HowToVoteIcon></HowToVoteIcon>\r\n                <span className=\"vote_count\">{pollData.votes.length} votes till now</span>\r\n                <p className=\"vote_count\"\r\n                >Conducted By : {pollData.createdBy.name}</p>\r\n                <h1>RESULTS</h1>\r\n                \r\n                    {pollData.options.map((data,index)=>{\r\n                        return(\r\n                            <Grid container>\r\n                                <Grid item xs={12} sm={12} md={9} lg={9}>\r\n                                    <div className=\"bar\" style={{width:pollData.votes.length?optionCount[index]/pollData.votes.length*100+\"%\":\"0.5%\"}}>\r\n                                    \r\n                                    </div>\r\n                                </Grid> \r\n                                <Grid item xs={12} sm={12} md={3} lg={3}>\r\n                                {\r\n                                    pollData.votes.length\r\n                                    ?\r\n                                    <p>{optionCount[index]} votes ({(optionCount[index]/pollData.votes.length*100).toFixed(2)+\"%\"}) {data.optionContent}</p>\r\n                                    :\r\n                                    <p>0 votes (0%) {data.optionContent}</p>\r\n                                }\r\n                                \r\n                                </Grid>  \r\n                            </Grid>\r\n                        );\r\n                    })} \r\n                <div className=\"vote\"\r\n                onClick={()=>{voteButtonHandler()}}>\r\n                    <SendIcon></SendIcon>\r\n                    <span className=\"vote_count\">VOTE</span>\r\n                </div>\r\n                \r\n                <Dialog\r\n                open={dialogOpen}\r\n                onBackdropClick={()=>{setDialogOpen(false)}}>\r\n                    <div className=\"dialog\">\r\n                        <FormControl style={{width:\"100%\"}} component=\"fieldset\">\r\n                        <h2 className=\"options_dialog\">OPTIONS</h2>\r\n                        <RadioGroup aria-label=\"Options\" name=\"options\" value={vote} onChange={(e)=>{setVote(e.target.value)}}>\r\n                            {pollData.options.map((data)=>{\r\n                                return(\r\n                                    <FormControlLabel value={data.optionContent} control={<Radio color=\"primary\" />} label={data.optionContent} />\r\n                                );\r\n                            })}\r\n                            <div className=\"vote\"\r\n                            onClick={()=>{PostData()}}>\r\n                                <SendIcon></SendIcon>\r\n                                <span className=\"vote_count\">VOTE</span>\r\n                            </div>\r\n                        </RadioGroup>\r\n                        </FormControl>\r\n                    </div>\r\n                </Dialog>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PersonalPoll;","C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\components\\Footer\\Footer.js",[],"C:\\Users\\vijay joshi\\Desktop\\Vijay\\MERN STACK PROJECTS\\POLL-TOWARDS-A-GOAL\\Frontend\\p-tag\\src\\components\\LoaderAnimation.jsx",[],{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","replacedBy":"138"},{"ruleId":"139","severity":1,"message":"140","line":2,"column":24,"nodeType":"141","messageId":"142","endLine":2,"endColumn":28},{"ruleId":"139","severity":1,"message":"143","line":20,"column":13,"nodeType":"141","messageId":"142","endLine":20,"endColumn":25},{"ruleId":"139","severity":1,"message":"143","line":25,"column":15,"nodeType":"141","messageId":"142","endLine":25,"endColumn":27},{"ruleId":"144","severity":1,"message":"145","line":31,"column":6,"nodeType":"146","endLine":31,"endColumn":34},{"ruleId":"147","severity":1,"message":"148","line":27,"column":21,"nodeType":"149","endLine":27,"endColumn":60},{"ruleId":"147","severity":1,"message":"148","line":112,"column":17,"nodeType":"149","endLine":112,"endColumn":60},{"ruleId":"144","severity":1,"message":"150","line":25,"column":7,"nodeType":"151","endLine":25,"endColumn":9,"suggestions":"152"},{"ruleId":"144","severity":1,"message":"153","line":69,"column":7,"nodeType":"151","endLine":69,"endColumn":15,"suggestions":"154"},{"ruleId":"144","severity":1,"message":"150","line":28,"column":7,"nodeType":"151","endLine":28,"endColumn":9,"suggestions":"155"},{"ruleId":"144","severity":1,"message":"156","line":82,"column":7,"nodeType":"151","endLine":82,"endColumn":12,"suggestions":"157"},{"ruleId":"158","severity":1,"message":"159","line":126,"column":42,"nodeType":"160","messageId":"161","endLine":126,"endColumn":43,"suggestions":"162"},{"ruleId":"158","severity":1,"message":"159","line":126,"column":67,"nodeType":"160","messageId":"161","endLine":126,"endColumn":68,"suggestions":"163"},{"ruleId":"158","severity":1,"message":"159","line":126,"column":76,"nodeType":"160","messageId":"161","endLine":126,"endColumn":77,"suggestions":"164"},{"ruleId":"158","severity":1,"message":"159","line":126,"column":80,"nodeType":"160","messageId":"161","endLine":126,"endColumn":81,"suggestions":"165"},{"ruleId":"144","severity":1,"message":"153","line":61,"column":7,"nodeType":"151","endLine":61,"endColumn":15,"suggestions":"166"},{"ruleId":"139","severity":1,"message":"143","line":65,"column":19,"nodeType":"141","messageId":"142","endLine":65,"endColumn":31},{"ruleId":"144","severity":1,"message":"150","line":70,"column":7,"nodeType":"151","endLine":70,"endColumn":9,"suggestions":"167"},{"ruleId":"139","severity":1,"message":"143","line":23,"column":19,"nodeType":"141","messageId":"142","endLine":23,"endColumn":31},{"ruleId":"144","severity":1,"message":"150","line":28,"column":7,"nodeType":"151","endLine":28,"endColumn":9,"suggestions":"168"},{"ruleId":"144","severity":1,"message":"156","line":82,"column":7,"nodeType":"151","endLine":82,"endColumn":12,"suggestions":"169"},{"ruleId":"158","severity":1,"message":"159","line":126,"column":42,"nodeType":"160","messageId":"161","endLine":126,"endColumn":43,"suggestions":"170"},{"ruleId":"158","severity":1,"message":"159","line":126,"column":67,"nodeType":"160","messageId":"161","endLine":126,"endColumn":68,"suggestions":"171"},{"ruleId":"158","severity":1,"message":"159","line":126,"column":76,"nodeType":"160","messageId":"161","endLine":126,"endColumn":77,"suggestions":"172"},{"ruleId":"158","severity":1,"message":"159","line":126,"column":80,"nodeType":"160","messageId":"161","endLine":126,"endColumn":81,"suggestions":"173"},{"ruleId":"139","severity":1,"message":"143","line":14,"column":19,"nodeType":"141","messageId":"142","endLine":14,"endColumn":31},{"ruleId":"144","severity":1,"message":"150","line":29,"column":7,"nodeType":"151","endLine":29,"endColumn":9,"suggestions":"174"},{"ruleId":"147","severity":1,"message":"148","line":42,"column":33,"nodeType":"149","endLine":42,"endColumn":87},{"ruleId":"135","replacedBy":"175"},{"ruleId":"137","replacedBy":"176"},{"ruleId":"139","severity":1,"message":"143","line":14,"column":19,"nodeType":"141","messageId":"142","endLine":14,"endColumn":31},{"ruleId":"144","severity":1,"message":"150","line":29,"column":7,"nodeType":"151","endLine":29,"endColumn":9,"suggestions":"177"},{"ruleId":"147","severity":1,"message":"148","line":42,"column":33,"nodeType":"149","endLine":42,"endColumn":90},{"ruleId":"139","severity":1,"message":"143","line":20,"column":19,"nodeType":"141","messageId":"142","endLine":20,"endColumn":31},{"ruleId":"139","severity":1,"message":"143","line":38,"column":23,"nodeType":"141","messageId":"142","endLine":38,"endColumn":35},{"ruleId":"144","severity":1,"message":"178","line":59,"column":7,"nodeType":"151","endLine":59,"endColumn":9,"suggestions":"179"},{"ruleId":"147","severity":1,"message":"148","line":67,"column":21,"nodeType":"149","endLine":67,"endColumn":76},{"ruleId":"144","severity":1,"message":"150","line":26,"column":7,"nodeType":"151","endLine":26,"endColumn":9,"suggestions":"180"},{"ruleId":"144","severity":1,"message":"150","line":26,"column":7,"nodeType":"151","endLine":26,"endColumn":9,"suggestions":"181"},{"ruleId":"139","severity":1,"message":"182","line":8,"column":8,"nodeType":"141","messageId":"142","endLine":8,"endColumn":17},{"ruleId":"139","severity":1,"message":"143","line":80,"column":23,"nodeType":"141","messageId":"142","endLine":80,"endColumn":35},{"ruleId":"144","severity":1,"message":"178","line":112,"column":7,"nodeType":"151","endLine":112,"endColumn":9,"suggestions":"183"},{"ruleId":"139","severity":1,"message":"182","line":8,"column":8,"nodeType":"141","messageId":"142","endLine":8,"endColumn":17},{"ruleId":"144","severity":1,"message":"178","line":81,"column":7,"nodeType":"151","endLine":81,"endColumn":9,"suggestions":"184"},"no-native-reassign",["185"],"no-negated-in-lhs",["186"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'decodedToken' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["187"],"React Hook useEffect has missing dependencies: 'email', 'history', and 'password'. Either include them or remove the dependency array.",["188"],["189"],"React Hook useEffect has missing dependencies: 'email', 'history', 'name', and 'password'. Either include them or remove the dependency array.",["190"],"no-useless-escape","Unnecessary escape character: \\\".","Literal","unnecessaryEscape",["191","192"],["193","194"],["195","196"],["197","198"],["199"],["200"],["201"],["202"],["203","204"],["205","206"],["207","208"],["209","210"],["211"],["185"],["186"],["212"],"React Hook useEffect has missing dependencies: 'history' and 'props.location.pathname'. Either include them or remove the dependency array.",["213"],["214"],["215"],"'FormLabel' is defined but never used.",["216"],["217"],"no-global-assign","no-unsafe-negation",{"desc":"218","fix":"219"},{"desc":"220","fix":"221"},{"desc":"218","fix":"222"},{"desc":"223","fix":"224"},{"messageId":"225","fix":"226","desc":"227"},{"messageId":"228","fix":"229","desc":"230"},{"messageId":"225","fix":"231","desc":"227"},{"messageId":"228","fix":"232","desc":"230"},{"messageId":"225","fix":"233","desc":"227"},{"messageId":"228","fix":"234","desc":"230"},{"messageId":"225","fix":"235","desc":"227"},{"messageId":"228","fix":"236","desc":"230"},{"desc":"220","fix":"237"},{"desc":"218","fix":"238"},{"desc":"218","fix":"239"},{"desc":"223","fix":"240"},{"messageId":"225","fix":"241","desc":"227"},{"messageId":"228","fix":"242","desc":"230"},{"messageId":"225","fix":"243","desc":"227"},{"messageId":"228","fix":"244","desc":"230"},{"messageId":"225","fix":"245","desc":"227"},{"messageId":"228","fix":"246","desc":"230"},{"messageId":"225","fix":"247","desc":"227"},{"messageId":"228","fix":"248","desc":"230"},{"desc":"218","fix":"249"},{"desc":"218","fix":"250"},{"desc":"251","fix":"252"},{"desc":"218","fix":"253"},{"desc":"218","fix":"254"},{"desc":"251","fix":"255"},{"desc":"251","fix":"256"},"Update the dependencies array to be: [history]",{"range":"257","text":"258"},"Update the dependencies array to be: [email, history, loader, password]",{"range":"259","text":"260"},{"range":"261","text":"258"},"Update the dependencies array to be: [email, history, name, password, url]",{"range":"262","text":"263"},"removeEscape",{"range":"264","text":"265"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"266","text":"267"},"Replace the `\\` with `\\\\` to include the actual backslash character.",{"range":"268","text":"265"},{"range":"269","text":"267"},{"range":"270","text":"265"},{"range":"271","text":"267"},{"range":"272","text":"265"},{"range":"273","text":"267"},{"range":"274","text":"260"},{"range":"275","text":"258"},{"range":"276","text":"258"},{"range":"277","text":"263"},{"range":"278","text":"265"},{"range":"279","text":"267"},{"range":"280","text":"265"},{"range":"281","text":"267"},{"range":"282","text":"265"},{"range":"283","text":"267"},{"range":"284","text":"265"},{"range":"285","text":"267"},{"range":"286","text":"258"},{"range":"287","text":"258"},"Update the dependencies array to be: [history, props.location.pathname]",{"range":"288","text":"289"},{"range":"290","text":"258"},{"range":"291","text":"258"},{"range":"292","text":"289"},{"range":"293","text":"289"},[854,856],"[history]",[2490,2498],"[email, history, loader, password]",[988,990],[2973,2978],"[email, history, name, password, url]",[4341,4342],"",[4341,4341],"\\",[4366,4367],[4366,4366],[4375,4376],[4375,4375],[4379,4380],[4379,4379],[2261,2269],[2519,2521],[987,989],[3000,3005],[4400,4401],[4400,4400],[4425,4426],[4425,4425],[4434,4435],[4434,4434],[4438,4439],[4438,4438],[992,994],[980,982],[2108,2110],"[history, props.location.pathname]",[889,891],[917,919],[4047,4049],[2793,2795]]